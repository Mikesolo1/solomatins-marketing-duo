
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { MessageCircle, Mail, Phone, Clock, CheckCircle, Send } from "lucide-react";
import { useState } from "react";
import { useToast } from "@/hooks/use-toast";

const Contact = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    company: '',
    message: ''
  });
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();

  const sendToTelegram = async (data: typeof formData) => {
    const botToken = '7457475256:AAHKiVeNSaMbecFN20aFBCSNnMKFl6FjixQ';
    const chatId = '-4900375409';
    
    const message = `üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!

üë§ –ò–º—è: ${data.name}
üìß Email: ${data.email}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${data.company}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

    try {
      const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: message,
          parse_mode: 'HTML'
        }),
      });

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }

      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
      return false;
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);

    try {
      const success = await sendToTelegram(formData);
      
      if (success) {
        toast({
          title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
          description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è",
        });

        setFormData({
          name: '',
          email: '',
          phone: '',
          company: '',
          message: ''
        });
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const contactMethods = [
    {
      icon: <MessageCircle className="text-green-500" size={24} />,
      title: "WhatsApp",
      description: "–ë—ã—Å—Ç—Ä–∞—è —Å–≤—è–∑—å –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤",
      value: "+7 (989) 295-10-30",
      action: "–ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp",
      color: "bg-green-50 border-green-200 hover:bg-green-100",
      link: "https://wa.me/79892951030"
    },
    {
      icon: <Mail className="text-blue-500" size={24} />,
      title: "Email",
      description: "–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞",
      value: "info@solomatin-marketing.ru",
      action: "–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ",
      color: "bg-blue-50 border-blue-200 hover:bg-blue-100",
      link: "mailto:info@solomatin-marketing.ru"
    },
    {
      icon: <Phone className="text-orange-500" size={24} />,
      title: "–ó–≤–æ–Ω–æ–∫",
      description: "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–ø–∏—Å–∫—É",
      value: "+7 (989) 295-10-30",
      action: "–ü–æ–∑–≤–æ–Ω–∏—Ç—å",
      color: "bg-orange-50 border-orange-200 hover:bg-orange-100",
      link: "tel:+79892951030"
    }
  ];

  return (
    <section id="contact" className="py-20 bg-gradient-to-br from-gray-50 to-blue-50/30">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <Badge variant="secondary" className="mb-4 bg-orange-100 text-orange-700 border-orange-200">
            –ö–æ–Ω—Ç–∞–∫—Ç—ã
          </Badge>
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            –ù–∞—á–Ω—ë–º —Å –¥–∏–∞–ª–æ–≥–∞
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ—ë–º –ø—Ä–æ–µ–∫—Ç–µ, –∏ –º—ã –ø—Ä–µ–¥–ª–æ–∂–∏–º –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —É–∂–µ –≤ –ø–µ—Ä–≤–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–µ
          </p>
        </div>

        <div className="max-w-6xl mx-auto">
          {/* Contact methods */}
          <div className="grid md:grid-cols-3 gap-6 mb-12">
            {contactMethods.map((method, index) => (
              <Card key={index} className={`border-2 ${method.color} transition-all duration-300 hover:shadow-lg group`}>
                <CardHeader className="text-center pb-4">
                  <div className="flex justify-center mb-4">
                    <div className="w-16 h-16 bg-white rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300">
                      {method.icon}
                    </div>
                  </div>
                  <CardTitle className="text-xl text-gray-900">{method.title}</CardTitle>
                </CardHeader>
                <CardContent className="text-center">
                  <p className="text-gray-600 mb-4 text-sm">{method.description}</p>
                  <p className="text-gray-900 font-medium mb-4">{method.value}</p>
                  <Button 
                    variant="outline" 
                    className="w-full group-hover:bg-white transition-colors"
                    onClick={() => window.open(method.link, '_blank')}
                  >
                    {method.action}
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Main contact form */}
          <div className="grid lg:grid-cols-3 gap-8">
            {/* Form */}
            <div className="lg:col-span-2">
              <Card className="border-0 shadow-xl bg-white/90 backdrop-blur-sm">
                <CardHeader>
                  <CardTitle className="text-2xl text-gray-900 flex items-center">
                    <Send className="mr-3 text-orange-500" size={24} />
                    –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                  </CardTitle>
                  <p className="text-gray-600">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤</p>
                </CardHeader>
                <CardContent>
                  <form onSubmit={handleSubmit} className="space-y-6">
                    <div className="grid md:grid-cols-2 gap-4">
                      <div>
                        <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">
                          –í–∞—à–µ –∏–º—è *
                        </label>
                        <Input
                          id="name"
                          name="name"
                          value={formData.name}
                          onChange={handleInputChange}
                          required
                          placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                          className="border-gray-300 focus:border-orange-500 focus:ring-orange-500"
                        />
                      </div>
                      <div>
                        <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
                          Email *
                        </label>
                        <Input
                          id="email"
                          name="email"
                          type="email"
                          value={formData.email}
                          onChange={handleInputChange}
                          required
                          placeholder="ivan@company.ru"
                          className="border-gray-300 focus:border-orange-500 focus:ring-orange-500"
                        />
                      </div>
                    </div>

                    <div className="grid md:grid-cols-2 gap-4">
                      <div>
                        <label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-2">
                          –¢–µ–ª–µ—Ñ–æ–Ω
                        </label>
                        <Input
                          id="phone"
                          name="phone"
                          value={formData.phone}
                          onChange={handleInputChange}
                          placeholder="+7 (989) 295-10-30"
                          className="border-gray-300 focus:border-orange-500 focus:ring-orange-500"
                        />
                      </div>
                      <div>
                        <label htmlFor="company" className="block text-sm font-medium text-gray-700 mb-2">
                          –ö–æ–º–ø–∞–Ω–∏—è / –ø—Ä–æ–µ–∫—Ç
                        </label>
                        <Input
                          id="company"
                          name="company"
                          value={formData.company}
                          onChange={handleInputChange}
                          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
                          className="border-gray-300 focus:border-orange-500 focus:ring-orange-500"
                        />
                      </div>
                    </div>

                    <div>
                      <label htmlFor="message" className="block text-sm font-medium text-gray-700 mb-2">
                        –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø—Ä–æ–µ–∫—Ç–µ
                      </label>
                      <Textarea
                        id="message"
                        name="message"
                        value={formData.message}
                        onChange={handleInputChange}
                        rows={6}
                        placeholder="–ö–∞–∫–∏–µ —É –≤–∞—Å –∑–∞–¥–∞—á–∏? –ß—Ç–æ —É–∂–µ –¥–µ–ª–∞–ª–∏? –ö–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?"
                        className="resize-none border-gray-300 focus:border-orange-500 focus:ring-orange-500"
                      />
                    </div>

                    <Button 
                      type="submit" 
                      disabled={isLoading}
                      className="w-full bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white text-lg py-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 group"
                    >
                      {isLoading ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                      <Send className="ml-2 group-hover:translate-x-1 transition-transform" size={20} />
                    </Button>

                    <p className="text-sm text-gray-500 text-center">
                      –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                    </p>
                  </form>
                </CardContent>
              </Card>
            </div>

            {/* Additional info */}
            <div className="space-y-6">
              <Card className="border-0 shadow-lg bg-white/90 backdrop-blur-sm">
                <CardContent className="p-6">
                  <div className="flex items-center mb-4">
                    <Clock className="text-blue-500 mr-3" size={20} />
                    <h3 className="font-semibold text-gray-900">–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞</h3>
                  </div>
                  <p className="text-gray-600 text-sm mb-4">
                    –û—Ç–≤–µ—á–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è (–ø–Ω-–ø—Ç, 10:00-18:00 –ú–°–ö)
                  </p>
                  <div className="space-y-2">
                    <div className="flex items-center text-sm">
                      <CheckCircle className="text-green-500 mr-2" size={16} />
                      <span className="text-gray-700">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <CheckCircle className="text-green-500 mr-2" size={16} />
                      <span className="text-gray-700">–ê–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <CheckCircle className="text-green-500 mr-2" size={16} />
                      <span className="text-gray-700">–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="border-0 shadow-lg bg-gradient-to-br from-orange-50 to-red-50">
                <CardContent className="p-6 text-center">
                  <h3 className="font-bold text-gray-900 mb-3">–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
                  <div className="space-y-3 text-sm text-gray-700">
                    <div className="flex items-start space-x-3">
                      <span className="w-6 h-6 bg-orange-500 text-white rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0 mt-0.5">1</span>
                      <span>–ò–∑—É—á–∞–µ–º –≤–∞—à –ø—Ä–æ–µ–∫—Ç –∏ –∑–∞–¥–∞—á–∏</span>
                    </div>
                    <div className="flex items-start space-x-3">
                      <span className="w-6 h-6 bg-orange-500 text-white rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0 mt-0.5">2</span>
                      <span>–ü—Ä–æ–≤–æ–¥–∏–º —ç–∫—Å–ø—Ä–µ—Å—Å-–∞—É–¥–∏—Ç</span>
                    </div>
                    <div className="flex items-start space-x-3">
                      <span className="w-6 h-6 bg-orange-500 text-white rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0 mt-0.5">3</span>
                      <span>–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Contact;
